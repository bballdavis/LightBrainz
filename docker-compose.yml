version: '3.8'

services:
  musicbrainz-db:
    image: postgres:13
    command:
      - postgres
      - -c
      - shared_buffers=${MB_DB_SHARED_BUFFERS:-2GB}
      - -c
      - shared_preload_libraries=${MB_DB_PRELOAD_LIBS:-}
    environment:
      POSTGRES_DB: ${MB_DB_NAME:-musicbrainz}
      POSTGRES_USER: ${MB_DB_USER:-musicbrainz}
      POSTGRES_PASSWORD: ${MB_DB_PASSWORD:-musicbrainz}
    volumes:
      - ${MB_DB_DATA:-./volumes/musicbrainz-db}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MB_DB_USER:-musicbrainz} -d ${MB_DB_NAME:-musicbrainz}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - ${MB_REDIS_DATA:-./volumes/musicbrainz-redis}:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  search:
    image: solr:8
    environment:
      - SOLR_HEAP=${MB_SOLR_HEAP:-2g}
    ports:
      - "${MB_SOLR_PORT:-8983}:8983"
    volumes:
      - ${MB_SOLR_DATA:-./volumes/musicbrainz-search}:/var/solr

  musicbrainz:
    build:
      context: ./docker/musicbrainz
      dockerfile: Dockerfile
    environment:
      MB_DB_TYPE: postgres
      MB_DB_HOST: musicbrainz-db
      MB_DB_PORT: 5432
      MB_DB_NAME: ${MB_DB_NAME:-musicbrainz}
      MB_DB_USER: ${MB_DB_USER:-musicbrainz}
      MB_DB_PASS: ${MB_DB_PASSWORD:-musicbrainz}
      MB_REDIS_HOST: redis
      SEARCH_SERVER: http://search:8983/solr
  MB_REPLICATION_ACCESS_TOKEN: ${MB_REPLICATION_ACCESS_TOKEN:-}
  MB_REPLICATION_TYPE: ${MB_REPLICATION_TYPE:-hourly}
  MB_IMPORT_DUMPS: ${MB_IMPORT_DUMPS:-true}
  MB_DUMPS_URL: ${MB_DUMPS_URL:-}
  MB_INDEX_ENTITIES: ${MB_INDEX_ENTITIES:-artist,release}
    ports:
      - "${MB_WEB_PORT:-5800}:5000"
    depends_on:
      - musicbrainz-db
      - redis
      - search

  hearring-aid:
    build:
      context: ./docker/hearring-aid
      dockerfile: Dockerfile
    environment:
      MB_DB_HOST: musicbrainz-db
      MB_DB_PORT: 5432
      MB_DB_NAME: ${MB_DB_NAME:-musicbrainz}
      MB_DB_USER: ${MB_DB_USER:-musicbrainz}
      MB_DB_PASS: ${MB_DB_PASSWORD:-musicbrainz}
      MB_DB_SSLMODE: ${MB_DB_SSLMODE:-disable}
      OUTPUT_DIR: /data
  HA_CRON_SCHEDULE: ${HA_CRON_SCHEDULE:-weekly}
    volumes:
      - ${HA_OUTPUT_DIR:-./volumes/hearring-aid-data}:/data
    depends_on:
      - musicbrainz-db

  mb-replicator:
    image: alpine:3.19
    environment:
      REPLICATION_FREQUENCY: ${REPLICATION_FREQUENCY:-weekly}
      MB_DB_HOST: musicbrainz-db
      MB_DB_PORT: 5432
      MB_DB_NAME: ${MB_DB_NAME:-musicbrainz}
      MB_DB_USER: ${MB_DB_USER:-musicbrainz}
      MB_DB_PASSWORD: ${MB_DB_PASSWORD:-musicbrainz}
      MB_DB_SSLMODE: ${MB_DB_SSLMODE:-disable}
      MB_REPLICATION_ACCESS_TOKEN: ${MB_REPLICATION_ACCESS_TOKEN:-}
      MB_REPLICATION_TYPE: ${MB_REPLICATION_TYPE:-hourly}
    volumes:
      - ./docker/musicbrainz/scripts:/scripts:ro
    depends_on:
      - musicbrainz-db
    entrypoint: ["/bin/sh", "-c"]
    command: |
      set -e
      case "$REPLICATION_FREQUENCY" in 
        daily) SLEEP=86400;;
        weekly) SLEEP=604800;;
        monthly) SLEEP=2592000;;
        *) SLEEP=86400;;
      esac
      while true; do
        echo "[mb-replicator] Running replication cycle...";
        /bin/sh /scripts/replicate.sh || true;
        sleep "$SLEEP";
      done

  mb-indexer:
    image: alpine:3.19
    environment:
      INDEX_FREQUENCY: ${INDEX_FREQUENCY:-weekly}
      MB_INDEX_ENTITIES: ${MB_INDEX_ENTITIES:-artist,release}
    volumes:
      - ./docker/hearring-aid/scripts:/scripts:ro
    depends_on:
      - musicbrainz
      - search
    entrypoint: ["/bin/sh", "-c"]
    command: |
      set -e
      case "$INDEX_FREQUENCY" in 
        daily) SLEEP=86400;;
        weekly) SLEEP=604800;;
        monthly) SLEEP=2592000;;
        *) SLEEP=86400;;
      esac
      while true; do
        echo "[mb-indexer] Running index cycle...";
        /bin/sh /scripts/reindex.sh || true;
        sleep "$SLEEP";
      done

  mb-bootstrap:
    build:
      context: ./docker/musicbrainz/bootstrap
      dockerfile: Dockerfile
    environment:
      MB_DB_HOST: musicbrainz-db
      MB_DB_PORT: 5432
      MB_DB_NAME: ${MB_DB_NAME:-musicbrainz}
      MB_DB_USER: ${MB_DB_USER:-musicbrainz}
      MB_DB_PASSWORD: ${MB_DB_PASSWORD:-musicbrainz}
      MB_DB_SSLMODE: ${MB_DB_SSLMODE:-disable}
      MB_IMPORT_DUMPS: ${MB_IMPORT_DUMPS:-true}
      MB_DUMPS_URL: ${MB_DUMPS_URL:-}
    volumes:
      - ./docker/musicbrainz/scripts:/scripts:ro
    depends_on:
      - musicbrainz-db
    entrypoint: ["/bin/sh", "-c"]
    command: "/scripts/bootstrap.sh"
    restart: "no"
